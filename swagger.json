{
  "openapi": "3.0.0",
  "info": {
    "title": "Mon Mentor API",
    "description": "API complète pour la plateforme de mentorat avec authentification JWT, gestion des utilisateurs, mentors, sessions, messages et avis.",
    "version": "1.0.0",
    "contact": {
      "email": "support@mentorapi.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Serveur de développement"
    },
    {
      "url": "https://api.mentorapp.com/v1",
      "description": "Serveur de production" 
    }
  ],
  "tags": [
    { 
      "name": "Auth", 
      "description": "Authentification des utilisateurs" 
    },
    { 
      "name": "Users", 
      "description": "Opérations sur les profils utilisateurs" 
    },
    { 
      "name": "Mentors", 
      "description": "Gestion des mentors et de leurs spécialités" 
    },
    { 
      "name": "Sessions", 
      "description": "Réservation et gestion des sessions" 
    },
    { 
      "name": "Messages", 
      "description": "Messagerie entre utilisateurs" 
    },
    { 
      "name": "Reviews", 
      "description": "Avis et évaluations des mentors" 
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Inscription d'un nouvel utilisateur",
        "description": "Permet à un nouvel utilisateur (user ou mentor) de créer un compte",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              },
              "examples": {
                "user": {
                  "value": {
                    "firstName": "Jean",
                    "lastName": "Dupont",
                    "email": "jean.dupont@example.com",
                    "password": "MotDePasse123!",
                    "role": "user"
                  }
                },
                "mentor": {
                  "value": {
                    "firstName": "Marie",
                    "lastName": "Martin",
                    "email": "marie.martin@example.com",
                    "password": "MotDePasse123!",
                    "role": "mentor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Compte créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email déjà utilisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Connexion d'un utilisateur",
        "description": "Authentification d'un utilisateur existant et récupération du token JWT",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              },
              "examples": {
                "regular": {
                  "value": {
                    "email": "jean.dupont@example.com",
                    "password": "MotDePasse123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Identifiants invalides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Récupérer le profil utilisateur",
        "description": "Obtenir les informations du profil de l'utilisateur connecté",
        "operationId": "getUserProfile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Profil utilisateur récupéré",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Mettre à jour le profil utilisateur",
        "description": "Modifier les informations du profil de l'utilisateur connecté",
        "operationId": "updateUserProfile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profil mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "400": {
            "description": "Requête invalide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mentors": {
      "get": {
        "tags": ["Mentors"],
        "summary": "Lister tous les mentors",
        "description": "Récupère la liste de tous les mentors disponibles",
        "operationId": "getAllMentors",
        "parameters": [
          {
            "$ref": "#/components/parameters/specialtyParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/pageParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des mentors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MentorProfile"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT obtenu après connexion via /auth/login"
      }
    },
    "schemas": {
      "UserRegister": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "password", "role"],
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 2,
            "example": "Jean"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "jean.dupont@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "example": "MotDePasse123!"
          },
          "role": {
            "type": "string",
            "enum": ["user", "mentor"],
            "example": "user"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "jean.dupont@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "MotDePasse123!"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT à utiliser dans le header Authorization",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "5f8d0d55b54764421b7156c3"
          },
          "firstName": {
            "type": "string",
            "example": "Jean"
          },
          "lastName": {
            "type": "string",
            "example": "Dupont"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "jean.dupont@example.com"
          },
          "role": {
            "type": "string",
            "enum": ["user", "mentor"],
            "example": "user"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-15T14:23:00Z"
          }
        }
      },
      "MentorProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserProfile"
          },
          {
            "type": "object",
            "properties": {
              "specialty": {
                "type": "string",
                "example": "Développement Web"
              },
              "bio": {
                "type": "string",
                "example": "Développeur fullstack avec 10 ans d'expérience"
              },
              "rating": {
                "type": "number",
                "format": "float",
                "minimum": 1,
                "maximum": 5,
                "example": 4.5
              }
            }
          }
        ]
      },
      "SuccessMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Opération réussie"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Message d'erreur"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Le champ email est requis"]
          }
        }
      }
    },
    "parameters": {
      "specialtyParam": {
        "name": "specialty",
        "in": "query",
        "description": "Filtrer par spécialité",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "Nombre d'éléments par page",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 10
        }
      },
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "Numéro de page",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1
        }
      }
    }
  }
}